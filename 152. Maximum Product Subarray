Given an integer array nums, find the contiguous subarray within an array (containing at least one number) which has the largest product.

Example 1:

Input: [2,3,-2,4]
Output: 6
Explanation: [2,3] has the largest product 6.
Example 2:

Input: [-2,0,-1]
Output: 0
Explanation: The result cannot be 2, because [-2,-1] is not a subarray.

SOLUTION:

class Solution {
public:
    int maxProduct(vector<int>& nums) {
        int n = nums.size();
        if(n==0){
            return -1;
        }
        int max_ending = nums[0];
        int min_ending = nums[0]; 
        int max_res = nums[0];
        for(int i=1;i<n;i++){
            int temp=max_ending;
            max_ending=max(max(max_ending*nums[i], min_ending*nums[i]), nums[i]);
            min_ending=min(min(temp*nums[i], min_ending*nums[i]), nums[i]);
            max_res=max(max_ending, max_res);
        } 
        return max_res;
    }
};
